Program {
   ModuleList [ (1:13)
      MAIN module patternWithDecl { (1:13)
         Pattern: $a + b$ [ (3:5)
            FunctionLit (4:29)
               input:
                  record( (4:5)
                     a: (4:6)
                     int (4:9)
                     b: (4:14)
                     int (4:17)
                  )
               output:
                  int (4:25)
               expression:
                  @addint (5:9)
                     ParsableExpressionList [ (5:17)
                        Variable a (5:17)
                        Variable b (5:20)
                     ]
            )
         ]
         Statement { (8:5)
            @decl (8:5)
               ParsableExpressionList [ (8:11)
                  Variable x (8:11)
                  int (8:14)
               ]
            name: x
            type: int
         }
         Statement { (9:5)
            @decl (9:5)
               ParsableExpressionList [ (9:11)
                  Variable y (9:11)
                  int (9:14)
               ]
            name: y
            type: int
         }
         Statement { (11:5)
            @printint (11:5)
               ParsableExpressionList [ (11:15)
                  PatternInvocation: $a + b$ (11:15)
                     a:
                        Variable x (11:15)
                     b:
                        Variable y (11:19)
               ]
         }
      }
   ]
}
